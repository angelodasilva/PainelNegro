a <- 1:3
a
a <- 1:10
a
a <- 1:10:2
a
a <- rep(1,5)
a
a <- rep((1,2),5)
a <- rep([1,2],5)
a <- rep(1,5)
a
a < seq(1,2)
a <- rep(seq(-7, 14, 7), c(3,1,2,4))
a
a <- rep(1:3, c(3,1,2))
a
dado_cbf <- read_html("https://www.cbf.com.br")
library(rvest) # pacote para web scraping
library(tidyverse)
dado_cbf <- read_html("https://www.cbf.com.br")
View(dado_cbf)
dado_cbf <- dado_cbf %>%
html_nodes(".swiper-slide")
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
resultados <- dado_cbf %>%
html_nodes(".aside-content .clearfix")
casa <- resultados %>%
html_nodes(".pull-left .time-sigla") %>%
html_text()
fora_casa <- resultados %>%
html_nodes(".pull-right .time-sigla") %>%
html_text()
placar <- resultados %>%
html_nodes(".partida-horario") %>%
html_text() %>%
str_extract("[0-9]{1}\ x\ [0-9]{1}")
print(placar)
df <- data.frame(rodada = rodada,
casa = casa,
placar = placar,
fora_casa = fora_casa,
stringsAsFactors = FALSE) %>%
filter(rodada <= 18)
View(df)
dado_cbf <- dado_cbf %>%
html_nodes(".swiper-slide")
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
resultados <- dado_cbf %>%
html_nodes(".aside-content .clearfix")
casa <- resultados %>%
html_nodes(".pull-left .time-sigla") %>%
html_text()
fora_casa <- resultados %>%
html_nodes(".pull-right .time-sigla") %>%
html_text()
placar <- resultados %>%
html_nodes(".partida-horario") %>%
html_text() %>%
str_extract("[0-9]{1}\ x\ [0-9]{1}")
rodada <- 0:(length(placar)-1) %/% 10 + 1
df <- data.frame(rodada = rodada,
casa = casa,
placar = placar,
fora_casa = fora_casa,
stringsAsFactors = FALSE) %>%
filter(rodada <= 18)
df <- data.frame(rodada = rodada,
casa = casa,
placar = placar,
fora_casa = fora_casa,
stringsAsFactors = FALSE) #%>%
View(df)
dado_cbf <- read_html("https://www.cbf.com.br")
dado_cbf <- dado_cbf %>%
html_nodes(".swiper-slide")
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
resultados <- dado_cbf %>%
html_nodes(".aside-content .clearfix")
casa <- resultados %>%
html_nodes(".pull-left .time-sigla") %>%
html_text()
fora_casa <- resultados %>%
html_nodes(".pull-right .time-sigla") %>%
html_text()
rodada <- 0:(length(placar)-1) %/% 10 + 1
df <- data.frame(rodada = rodada,
casa = casa,
placar = placar,
fora_casa = fora_casa,
stringsAsFactors = FALSE) #%>%
library(rvest) # pacote para web scraping
library(tidyverse)
dado_cbf <- read_html("https://www.cbf.com.br")
dado_cbf
dado_cbf <- dado_cbf %>%
html_nodes(".swiper-slide")
library(rvest) # pacote para web scraping
library(tidyverse)
dado_cbf <- read_html("https://www.cbf.com.br")
dado_cbf
dado_cbf <- dado_cbf %>%
html_nodes(".swiper-slide")
print(dado_cbf)
rodada <- dado_cbf %>%
html_nodes(".aside-header .text-center") %>%
html_text()
print(rodada)
resultados <- dado_cbf %>%
html_nodes(".aside-content .clearfix")
print(resultados)
casa <- resultados %>%
html_nodes(".pull-left .time-sigla") %>%
html_text()
print(casa)
fora_casa <- resultados %>%
html_nodes(".pull-right .time-sigla") %>%
html_text()
placar <- resultados %>%
html_nodes(".partida-horario") %>%
html_text() %>%
str_extract("[0-9]{1}\ x\ [0-9]{1}")
print(placar)
rodada <- 0:(length(placar)-1) %/% 10 + 1
df <- data.frame(rodada = rodada,
casa = casa,
placar = placar,
fora_casa = fora_casa,
stringsAsFactors = FALSE)
View(df)
library(shiny); runApp('Estudos/Cursos_feitos/Shiny/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
install.packages("rsconnect")
install.packages("rsconnect")
library(shiny); runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
library(shiny); runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
runApp('Estudos/Cursos_feitos/Shiny/PainelNegro/PAINEL3.R')
setwd("~/Estudos/Cursos_feitos/Shiny/PainelNegro")
install.packages("PNADcIBGE")
library(PNADcIBGE)
library(survey)
dadosPNAD22 = readRDS("dadosPNAD22.RDS")
dadosPNADc <- dadosPNAD22
options(scipen = 999)  # desativando notacao cientifica
options(survey.lonely.psu = "adjust" )
# adiciona uma coluna de uns
dadosPNADc$one <- 1
# preliminary survey design
pre_stratified <-
svydesign(
ids = ~ UPA ,
strata = ~ Estrato ,
weights = ~ V1031 ,
data = dadosPNADc ,
nest = TRUE
)
# post-stratification targets
df_pos <-
data.frame( posest = unique( dadosPNADc$posest ) , Freq = unique( dadosPNADc$V1030 ) )
# final survey design object
pnadc<- postStratify( pre_stratified , ~ posest , df_pos )
rm(pre_stratified, df_pos) #, dadosPNADc)
dadosPNAD22 = readRDS("dadosPNAD22.RDS")
dadosPNADc <- readRDS("dadosPNAD.RDS")
options(scipen = 999)  # desativando notacao cientifica
options(survey.lonely.psu = "adjust" )
# adiciona uma coluna de uns
dadosPNADc$one <- 1
dadospreta <- dadosPNADc[dadosPNADc$V2010 == "Preta",]
crossprod(dadospreta$one,dadospreta$V1032)
# preliminary survey design
pre_stratified <-
svydesign(
ids = ~ UPA ,
strata = ~ Estrato ,
weights = ~ V1031 ,
data = dadosPNADc ,
nest = TRUE
)
# post-stratification targets
df_pos <-
data.frame( posest = unique( dadosPNADc$posest ) , Freq = unique( dadosPNADc$V1030 ) )
# final survey design object
pnadc<- postStratify( pre_stratified , ~ posest , df_pos )
rm(pre_stratified, df_pos) #, dadosPNADc)
svyby(~one, ~V2010, pnadc, svytotal, na.rm=T)
View(dadosPNADc)
svyby(~one, ~V2010, ~UF, pnadc, svytotal, na.rm=T)
View(dadosPNADc)
svyby(~one, ~UF, pnadc, svytotal, na.rm=T)
svyby(~one, list(~V2010,~UF), pnadc, svytotal, na.rm=T)
